name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.2'

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: clippy, rustfmt
    
    - name: Set up Noir
      uses: noir-lang/noirup@v0.1.2
      with:
        toolchain: v1.0.0-beta.11

    - name: Build Noir contracts
      run: |
        # List all Noir sample project directories you want to build
        PROJECTS=(
          noir-samples/expressions/sum_a_b
          noir-samples/expressions/square_equation
          noir-samples/expressions/linear_equation
          noir-samples/expressions/rock_paper_scissors
          noir-samples/expressions/polynomial
          noir-samples/expressions/lcchecker
          noir-samples/black_box_functions/range
          noir-samples/black_box_functions/keccak_f1600
          noir-samples/black_box_functions/and
          noir-samples/black_box_functions/xor
          noir-samples/black_box_functions/sha256_compression
          noir-samples/black_box_functions/sha256_hash
          noir-samples/black_box_functions/blake2s
          noir-samples/black_box_functions/blake3
          noir-samples/black_box_functions/embedded_curve_add
          noir-samples/black_box_functions/multiscalar_multiplication 
          noir-samples/black_box_functions/poseidon2
          noir-samples/black_box_functions/ecdsa_secp256r1
          noir-samples/black_box_functions/ecdsa_secp256k1_failing
          noir-samples/black_box_functions/ecdsa_secp256k1
          noir-samples/black_box_functions/aes128encrypt
          noir-samples/black_box_functions/recursive_aggregation
          noir-samples/memory
          noir-samples/circuit_call
          noir-samples/real_world/provekit_basic
          noir-samples/zk_passport/exclusion_check
          noir-samples/zk_passport/inclusion_check
          noir-samples/zk_passport/age
          noir-samples/zk_passport/expiry
        )

        for project in "${PROJECTS[@]}"; do
          echo "▶️ Building Noir project: $project"
          cd "$project"
          nargo compile   # quicker than compile to catch errors
          nargo execute || (echo "Tests failed in $project" && exit 1)
          cd - > /dev/null
        done

    - name: Install dependencies
      run: go mod tidy

    - name: Build binary
      run: go build -v ./...

    - name: Build Test binaries
      run: cd rust/testgen && cargo run && cd ../..

    - name: Run tests
      run: go test ./... -timeout 0

    - name: Run linters
      run: go vet ./...